= aruba

Cucumber steps for driving out command line applications. The command line application can be anything,
a compiled C program, a Java program, a Perl script - anything.

== Usage

  gem install aruba

Then, just require the library in one of your ruby files under <tt>features/support</tt>

  require 'aruba'

You now have a bunch of step definitions that you can use in your features. Look at aruba/cucumber.rb
to see all the step definitions. Look at features/*.feature for examples (which are also testing Aruba
itself).

== Getting more output with tags.

Aruba has several tags you can use to get more information. You can put these tags on individual scenarios, or on a feature. The tags are:

* <tt>@announce-cmd</tt> - See what command is is run
* <tt>@announce-stdout</tt> - See the stdout
* <tt>@announce-stderr</tt> - See the stderr
* <tt>@announce-dir</tt> - See the current directory
* <tt>@announce-env</tt> - See environment variables set by Aruba
* <tt>@announce</tt> - Does all of the above

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Aslak Helles√∏y and David Chelimsky. See LICENSE for details.
